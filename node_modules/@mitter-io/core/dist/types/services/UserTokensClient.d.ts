import { TypedAxiosInstance } from 'restyped-axios';
import { MitterAxiosInterceptionHost } from '../Mitter';
import { IssuedUserToken } from '@mitter-io/models';
export declare const UserTokensPaths: {
    GetMe: string;
    GetUser: string;
    GetMyScreenName: string;
    GetUsersScreenName: string;
};
export interface UserTokensApi {
    '/v1/users/:userId/tokens': {
        POST: {
            params: {
                userId: string;
            };
            response: IssuedUserToken;
        };
    };
}
export declare const userTokensClientGenerator: (mitterAxiosInterceptionHost: MitterAxiosInterceptionHost) => TypedAxiosInstance<UserTokensApi>;
export declare class UserTokensClient {
    private mitterAxiosInterceptionHost;
    private userTokensAxiosClient;
    constructor(mitterAxiosInterceptionHost: MitterAxiosInterceptionHost);
    getUserToken(userId: string): Promise<IssuedUserToken>;
}
