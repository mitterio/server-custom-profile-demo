"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var common_1 = require("./common");
var constants_1 = require("./constants");
var base = constants_1.MitterConstants.Api.VersionPrefix + "/users";
exports.UsersPaths = {
    GetMe: base + "/me",
    GetUser: base + "/:userId",
    GetMyScreenName: base + "/me/screenname",
    GetUsersScreenName: base + "/:userIds/screenname"
};
exports.usersClientGenerator = common_1.clientGenerator();
var UsersClient = /** @class */ (function () {
    function UsersClient(mitterAxiosInterceptionHost) {
        this.mitterAxiosInterceptionHost = mitterAxiosInterceptionHost;
        this.usersAxiosClient = exports.usersClientGenerator(mitterAxiosInterceptionHost);
    }
    UsersClient.prototype.createUser = function (user) {
        return this.usersAxiosClient.post('/v1/users', user).then(function (x) { return x.data; });
    };
    UsersClient.prototype.getUsers = function (locators) {
        if (locators === void 0) { locators = undefined; }
        return this.usersAxiosClient
            .get('/v1/users', {
            params: Object.assign({}, locators === undefined ? { sandboxed: true } : {}, locators !== undefined ? { locators: locators } : {})
        })
            .then(function (x) { return x.data; });
    };
    UsersClient.prototype.getUser = function (userId) {
        return this.usersAxiosClient
            .get("/v1/users/" + userId)
            .then(function (x) { return x.data; });
    };
    UsersClient.prototype.setUserPresence = function (userId, userPresence) {
        return this.usersAxiosClient
            .post("/v1/users/" + userId + "/presence", userPresence)
            .then(function (x) { return x.data; });
    };
    UsersClient.prototype.getUserPresence = function (userId) {
        return this.usersAxiosClient
            .get("/v1/users/" + userId + "/presence")
            .then(function (x) { return x.data; });
    };
    UsersClient.prototype.addUserLocator = function (userId, locator) {
        return this.usersAxiosClient
            .post("/v1/users/" + userId + "/locators", locator)
            .then(function (x) { return x.data; });
    };
    UsersClient.prototype.logout = function () {
        return this.usersAxiosClient
            .get("/v1/users/me/logout")
            .then(function (x) { return x.data; });
    };
    UsersClient.prototype.addUserDeliveryEndpoint = function (deliveryEndpoint) {
        return this.usersAxiosClient
            .post("/v1/users/me/delivery-endpoints", deliveryEndpoint)
            .then(function (x) { return x.data; });
    };
    UsersClient.prototype.deleteUserDeliveryEndpoint = function (serializedEndpoint) {
        return this.usersAxiosClient
            .delete("/v1/users/me/delivery-endpoints/" + serializedEndpoint)
            .then(function (x) { return x.data; });
    };
    return UsersClient;
}());
exports.UsersClient = UsersClient;
//# sourceMappingURL=UsersClient.js.map