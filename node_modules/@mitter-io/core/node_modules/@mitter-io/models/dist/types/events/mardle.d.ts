import { Channel, ChannelParticipation } from '../messaging/Channels';
import { TimelineEvent } from '../messaging/TimelineEvents';
import { ApplicationEvent } from './central';
import { Message } from '../messaging/Messages';
declare abstract class ChannelEvent extends ApplicationEvent {
    channelId: string;
    constructor(channelId: string, applicationId: string);
}
export declare class NewChannelMessageEvent extends ChannelEvent {
    message: Message;
    constructor(message: Message, channelId: string, applicationId: string);
}
export declare class ChannelMessageReadyEvent extends ChannelEvent {
    message: Message;
    constructor(message: Message, channelId: string, applicationId: string);
}
export declare class NewChannelEvent extends ChannelEvent {
    channel: Channel;
    constructor(channel: Channel, channelId: string, applicationId: string);
}
export declare class ChannelMessageDeletedEvent extends ChannelEvent {
    deletedMessage: Message;
    constructor(deletedMessage: Message, channelId: string, applicationId: string);
}
export declare class ChannelDeletedEvent extends ChannelEvent {
    deletedChannel: Channel;
    constructor(deletedChannel: Channel, channelId: string, applicationId: string);
}
export declare class ChannelParticipatedAddedEvent extends ChannelEvent {
    channelParticipation: ChannelParticipation;
    constructor(channelParticipation: ChannelParticipation, channelId: string, applicationId: string);
}
export declare class ChannelParticipationModifiedEvent extends ChannelEvent {
    oldChannelParticipation: ChannelParticipation;
    newChannelParticipation: ChannelParticipation;
    constructor(oldChannelParticipation: ChannelParticipation, newChannelParticipation: ChannelParticipation, channelId: string, applicationId: string);
}
export declare class ChannelParticipantDeletedEvent extends ChannelEvent {
    channelParticipation: ChannelParticipation;
    constructor(channelParticipation: ChannelParticipation, channelId: string, applicationId: string);
}
export declare class NewTimelineEventForMessageEvent extends ChannelEvent {
    timeLineEvent: TimelineEvent;
    messageId: string;
    constructor(timeLineEvent: TimelineEvent, messageId: string, channelId: string, applicationId: string);
}
export declare class NewTimelineEventForChannelEvent extends ChannelEvent {
    timeLineEvent: TimelineEvent;
    constructor(timeLineEvent: TimelineEvent, channelId: string, applicationId: string);
}
export declare class NewTimelineEventEvent extends ApplicationEvent {
    timeLineEvent: TimelineEvent;
    constructor(timeLineEvent: TimelineEvent, applicationId: string);
}
export declare class ChannelMessagesTruncatedEvent extends ChannelEvent {
    constructor(channelId: string, applicationId: string);
}
export {};
