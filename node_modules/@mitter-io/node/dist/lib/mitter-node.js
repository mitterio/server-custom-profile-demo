"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@mitter-io/core");
var access_key_interceptor_1 = require("./auth/access-key-interceptor");
var MitterNode = /** @class */ (function (_super) {
    __extends(MitterNode, _super);
    function MitterNode(applicationId, accessKey, mitterApiBaseUrl) {
        var _this = _super.call(this) || this;
        _this.applicationId = applicationId;
        _this.accessKey = accessKey;
        _this.mitterApiBaseUrl = mitterApiBaseUrl;
        _this.accessKeySigningInterceptor = new access_key_interceptor_1.AccessKeySigningInterceptor(accessKey);
        return _this;
    }
    MitterNode.prototype.version = function () {
        return '0.5.0';
    };
    MitterNode.prototype.enableAxiosInterceptor = function (axiosInstance) {
        new core_1.MitterAxiosApiInterceptor(
        /* the application id */
        this.applicationId, 
        /* the default signing interceptor to use */
        this.accessKeySigningInterceptor.getInterceptor(), this.mitterApiBaseUrl).enable(axiosInstance);
    };
    return MitterNode;
}(core_1.MitterBase));
exports.MitterNode = MitterNode;
exports.Mitter = {
    forNode: function (applicationId, accessKey, mitterApiBaseUrl) {
        if (mitterApiBaseUrl === void 0) { mitterApiBaseUrl = core_1.MitterConstants.MitterApiUrl; }
        return new MitterNode(applicationId, accessKey, mitterApiBaseUrl);
    }
};
__export(require("./auth/application-credentials"));
//# sourceMappingURL=mitter-node.js.map