"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var digest_objects_1 = require("./digest-objects");
var randomstring_1 = require("randomstring");
var crypto_1 = require("crypto");
var AccessKeySigner = /** @class */ (function () {
    function AccessKeySigner(accessKey, accessSecret) {
        this.accessKey = accessKey;
        this.accessSecret = accessSecret;
    }
    AccessKeySigner.prototype.signRequest = function (digestParts) {
        var date = this.getDate(digestParts);
        var contentType = this.getContentType(digestParts);
        var nonce = this.getNonce(digestParts);
        var computePayload = [
            digestParts.method.toUpperCase(),
            contentType,
            digestParts.payloadMd5,
            date,
            digestParts.path,
            nonce
        ].join('\n');
        var digest = crypto_1.default
            .createHmac('SHA1', Buffer.from(this.accessSecret, 'base64'))
            .update(computePayload)
            .digest('base64');
        return new digest_objects_1.DigestGenerationArtifacts(nonce, date, "Auth " + this.accessKey + ":" + digest);
    };
    AccessKeySigner.prototype.getNonce = function (digestParts) {
        if (digestParts.nonce !== undefined) {
            return digestParts.nonce;
        }
        else {
            return randomstring_1.default.generate(32);
        }
    };
    AccessKeySigner.prototype.getContentType = function (digestParts) {
        if (digestParts.contentType !== undefined) {
            return digestParts.contentType;
        }
        else {
            return 'null';
        }
    };
    AccessKeySigner.prototype.getDate = function (digestParts) {
        if (digestParts.date !== undefined) {
            return digestParts.date;
        }
        else {
            return new Date().toUTCString();
        }
    };
    AccessKeySigner.Headers = {
        Nonce: 'Nonce',
        Date: 'Date',
        ContentMD5: 'Content-Md5',
        ContentType: 'Content-Type'
    };
    return AccessKeySigner;
}());
exports.default = AccessKeySigner;
//# sourceMappingURL=AccessKeySigner.js.map